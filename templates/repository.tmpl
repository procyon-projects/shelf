package {{ .PackageName }}

import (
	"database/sql"
)

{{range $repository := .Repositories}}
type {{ $repository.Type }} struct {

}

{{range $method :=  $repository.Methods -}}
func ({{ $repository.ReceiverName }} {{if $method.IsPointer -}} * {{- end }}{{ $repository.Type }}) {{ $method.Name }}(
    {{- $paramLength := len .Parameters -}}
    {{- $lastParamItemIndex := minus $paramLength 1 -}}

    {{- range $paramIndex, $parameter := .Parameters -}}
        {{ $parameter.Name }} {{if $parameter.IsPointer -}} * {{- end }} {{- $parameter.Type -}}
        {{- if ne $paramIndex $lastParamItemIndex  -}}, {{ end -}}
    {{- end -}}

) {{ $returnValueLength := len .ReturnValues -}}
  {{- $lastReturnValueItemIndex := minus $paramLength 1 -}}

  {{- if gt $returnValueLength 1 -}}
    (
  {{- end -}}

  {{- range $returnValueIndex, $returnValue := .ReturnValues -}}
    {{- if $returnValue.IsPointer -}} * {{- end -}}{{- $returnValue.Type -}}
    {{- if ne $returnValueIndex $lastReturnValueItemIndex  -}}, {{ end -}}
  {{- end -}}

  {{- if gt $returnValueLength 1 -}}
    )
  {{- end }} {

}

{{end}}
{{end}}
